<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/style.css') }}">
    <title>{{ title }} - My Flask App</title>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light bg-light mb-4">
        <div class="container">
            <a class="navbar-brand" href="{{ url_for('home.index') }}">My App</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('home.index') }}">Home</a>
                    </li>
                    </ul>
                <ul class="navbar-nav ms-auto">
                    {% if current_user.is_anonymous %}
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('auth.login') }}">Login</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('auth.signup') }}">Sign Up</a>
                    </li>
                    {% else %}
                    <li class="nav-item">
                        <span class="navbar-text me-3">Hello, {{ current_user.username }}!</span>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#">My Resources</a> </li>
                    <li class="nav-item">
                        <a class="nav-link" href="{{ url_for('auth.logout') }}">Logout</a>
                    </li>
                    {% endif %}
                </ul>
            </div>
        </div>
    </nav>

    <main class="container">
        {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
                {% for category, message in messages %}
                    <div class="alert alert-{{ category or 'info' }} alert-dismissible fade show" role="alert">
                        {{ message }}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                {% endfor %}
            {% endif %}
        {% endwith %}

        {% block content %}{% endblock %}
    </main>

    <footer class="mt-5 text-center text-muted">
        <p>&copy; {{ now().year }} My Flask App</p>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="{{ url_for('static', filename='js/script.js') }}"></script>
    {% block scripts %}{% endblock %} </body>
</html>

{% extends "base.html" %}
{% from 'bootstrap5/form.html' import render_form %} {% block content %}
    <h1>Sign In</h1>
    <div class="row">
        <div class="col-md-6">
             <form action="" method="post" novalidate>
                {{ form.hidden_tag() }} <div class="mb-3">
                    {{ form.username.label(class="form-label") }}
                    {{ form.username(class="form-control" + (" is-invalid" if form.username.errors else ""), size=32) }}
                    {% for error in form.username.errors %}
                        <div class="invalid-feedback">{{ error }}</div>
                    {% endfor %}
                </div>
                <div class="mb-3">
                    {{ form.password.label(class="form-label") }}
                    {{ form.password(class="form-control" + (" is-invalid" if form.password.errors else ""), size=32) }}
                     {% for error in form.password.errors %}
                        <div class="invalid-feedback">{{ error }}</div>
                    {% endfor %}
               </div>
                <div class="mb-3 form-check">
                    {{ form.remember_me(class="form-check-input") }}
                    {{ form.remember_me.label(class="form-check-label") }}
                </div>
                <p>{{ form.submit(class="btn btn-primary") }}</p>
            </form>
            </div>
    </div>
    <p>New User? <a href="{{ url_for('auth.signup') }}">Click to Sign Up!</a></p>
{% endblock %}


{% extends "base.html" %}

{% block content %}
    <h1>Sign Up</h1>
     <div class="row">
        <div class="col-md-6">
            <form action="" method="post" novalidate>
                {{ form.hidden_tag() }}
                <div class="mb-3">
                    {{ form.username.label(class="form-label") }}
                    {{ form.username(class="form-control" + (" is-invalid" if form.username.errors else ""), size=32) }}
                    {% for error in form.username.errors %}
                        <div class="invalid-feedback">{{ error }}</div>
                    {% endfor %}
                </div>
                 <div class="mb-3">
                    {{ form.email.label(class="form-label") }}
                    {{ form.email(class="form-control" + (" is-invalid" if form.email.errors else ""), size=64) }}
                     {% for error in form.email.errors %}
                        <div class="invalid-feedback">{{ error }}</div>
                    {% endfor %}
               </div>
                <div class="mb-3">
                    {{ form.password.label(class="form-label") }}
                    {{ form.password(class="form-control" + (" is-invalid" if form.password.errors else ""), size=32) }}
                     {% for error in form.password.errors %}
                        <div class="invalid-feedback">{{ error }}</div>
                    {% endfor %}
               </div>
                <div class="mb-3">
                    {{ form.password2.label(class="form-label") }}
                    {{ form.password2(class="form-control" + (" is-invalid" if form.password2.errors else ""), size=32) }}
                     {% for error in form.password2.errors %}
                        <div class="invalid-feedback">{{ error }}</div>
                    {% endfor %}
               </div>
                <p>{{ form.submit(class="btn btn-primary") }}</p>
            </form>
        </div>
    </div>
    <p>Already have an account? <a href="{{ url_for('auth.login') }}">Click to Sign In!</a></p>
{% endblock %}


{% extends "base.html" %}

{% block content %}
    <h1>Welcome to My App!</h1>
    {% if current_user.is_authenticated %}
        <p>You are logged in as {{ current_user.username }}.</p>
    {% else %}
        <p>You can <a href="{{ url_for('auth.login') }}">sign in</a> or <a href="{{ url_for('auth.signup') }}">sign up</a>.</p>
    {% endif %}

    <h2>Recent Resources</h2>
    {% if resources %}
        <ul class="list-group">
            {% for resource in resources %}
                <li class="list-group-item">
                    <a href="{{ url_for('home.view_resource', resource_id=resource.id) }}">{{ resource.name }}</a>
                     ({{ resource.resource_type.name }}) - Uploaded by {{ resource.author.username }} on {{ resource.timestamp.strftime('%Y-%m-%d %H:%M') }}
                     {% if current_user.is_authenticated and resource.user_id == current_user.id %}
                        <form action="{{ url_for('api.delete_resource', resource_id=resource.id) }}" method="POST" style="display: inline; margin-left: 10px;" onsubmit="return confirm('Are you sure you want to delete this resource?');">
                            <input type="hidden" name="_method" value="DELETE"> <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                        </form>
                     {% endif %}
                </li>
            {% else %}
                 <p>No resources found.</p>
            {% endfor %}
        </ul>
    {% else %}
        <p>No resources have been uploaded yet.</p>
    {% endif %}

    {% if current_user.is_authenticated %}
    <hr>
    <h2>Upload New Resource</h2>
    <form id="uploadForm" action="{{ url_for('api.upload_resource') }}" method="post" enctype="multipart/form-data">
        <div class="mb-3">
            <label for="resourceName" class="form-label">Resource Name</label>
            <input type="text" class="form-control" id="resourceName" name="name" required>
        </div>
        <div class="mb-3">
            <label for="resourceType" class="form-label">Resource Type</label>
            <select class="form-select" id="resourceType" name="type" required onchange="toggleUploadFields()">
                <option value="" selected disabled>Select Type</option>
                <option value="html">HTML</option>
                <option value="image">Image</option>
            </select>
        </div>
        <div class="mb-3" id="htmlContentField" style="display: none;">
            <label for="htmlContent" class="form-label">HTML Content</label>
            <textarea class="form-control" id="htmlContent" name="html_content" rows="5"></textarea>
        </div>
        <div class="mb-3" id="imageFileField" style="display: none;">
            <label for="imageFile" class="form-label">Image File</label>
            <input class="form-control" type="file" id="imageFile" name="file" accept="image/*">
             <small class="form-text text-muted">Allowed types: png, jpg, jpeg, gif</small>
        </div>
        <button type="submit" class="btn btn-success">Upload Resource</button>
    </form>
    <div id="uploadStatus" class="mt-3"></div>
    {% endif %}

{% endblock %}

{% block scripts %}
{{ super() }} <script>
    // Simple JS to toggle form fields based on resource type
    function toggleUploadFields() {
        const type = document.getElementById('resourceType').value;
        const htmlField = document.getElementById('htmlContentField');
        const imageField = document.getElementById('imageFileField');
        const htmlInput = document.getElementById('htmlContent');
        const imageInput = document.getElementById('imageFile');

        if (type === 'html') {
            htmlField.style.display = 'block';
            imageField.style.display = 'none';
            htmlInput.required = true;
            imageInput.required = false;
        } else if (type === 'image') {
            htmlField.style.display = 'none';
            imageField.style.display = 'block';
            htmlInput.required = false;
            imageInput.required = true;
        } else {
            htmlField.style.display = 'none';
            imageField.style.display = 'none';
            htmlInput.required = false;
            imageInput.required = false;
        }
    }

    // Optional: Handle form submission with AJAX for better UX
    const uploadForm = document.getElementById('uploadForm');
    const uploadStatus = document.getElementById('uploadStatus');

    if (uploadForm) {
        uploadForm.addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent default form submission
            uploadStatus.innerHTML = '<div class="spinner-border spinner-border-sm" role="status"><span class="visually-hidden">Loading...</span></div> Uploading...';
            uploadStatus.className = 'alert alert-info'; // Reset status style

            const formData = new FormData(this);

            fetch(this.action, {
                method: 'POST',
                body: formData,
                // Headers might be needed for CSRF token if not handled by hidden field/Flask-WTF
            })
            .then(response => response.json().then(data => ({ status: response.status, body: data })))
            .then(({ status, body }) => {
                if (status === 201) {
                    uploadStatus.innerHTML = `<strong>Success!</strong> ${body.message} (ID: ${body.resource.id})`;
                    uploadStatus.className = 'alert alert-success';
                    // Optionally, clear the form or reload parts of the page
                    uploadForm.reset();
                    toggleUploadFields(); // Reset field visibility
                    // Maybe reload the resource list?
                    // location.reload(); // Simple way to refresh
                } else {
                    uploadStatus.innerHTML = `<strong>Error (${status}):</strong> ${body.error || 'Upload failed.'}`;
                    uploadStatus.className = 'alert alert-danger';
                }
            })
            .catch(error => {
                console.error('Upload error:', error);
                uploadStatus.innerHTML = '<strong>Error:</strong> An unexpected error occurred during upload.';
                uploadStatus.className = 'alert alert-danger';
            });
        });
    }

    // Initialize field visibility on page load
    document.addEventListener('DOMContentLoaded', toggleUploadFields);

</script>
{% endblock %}


{% extends "base.html" %}

{% block content %}
    <h1>{{ resource.name }}</h1>
    <p><small>Uploaded by {{ resource.author.username }} on {{ resource.timestamp.strftime('%Y-%m-%d %H:%M') }}</small></p>
    <hr>
    <div>
        {{ resource.html_content | safe }}
    </div>
    <hr>
    <a href="{{ url_for('home.index') }}" class="btn btn-secondary">Back to Home</a>
{% endblock %}


{% extends "base.html" %}

{% block content %}
    <h1>{{ resource.name }}</h1>
    <p><small>Uploaded by {{ resource.author.username }} on {{ resource.timestamp.strftime('%Y-%m-%d %H:%M') }}</small></p>
    <hr>
    {% if resource.filepath %}
        {# Construct the URL to the image in the static uploads folder #}
        {# This assumes UPLOAD_FOLDER is inside 'static' #}
        {% set image_url = url_for('static', filename='uploads/' + resource.filepath) %}
         <img src="{{ image_url }}" alt="{{ resource.name }}" class="img-fluid rounded">
         <p><small>Path: {{ resource.filepath }}</small></p>
    {% else %}
        <p class="text-danger">Image file not found or path is missing.</p>
    {% endif %}
     <hr>
    <a href="{{ url_for('home.index') }}" class="btn btn-secondary">Back to Home</a>
{% endblock %}


# These templates provide a basic structure using Bootstrap 5 for styling.
# * `base.html`: The main layout with navigation, flash message display, and content blocks.
# * `login.html`, `signup.html`: Forms for authentication within the `auth` blueprint's template folder.
# * `index.html`: The home page, displaying a welcome message and a list of recent resources. Includes a basic upload form that uses JavaScript to toggle fields and submit via AJAX.
# * `view_html_resource.html`, `view_image_resource.html`: Simple templates to display the content of HTML or image resources.
# **Important Security Note:** The HTML view renders content directly using `| safe`, which is **highly insecure** if the HTML comes from untrusted users.
# You **must** sanitize user-provided HTML before rendering
